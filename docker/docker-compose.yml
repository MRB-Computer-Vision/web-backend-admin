version: "3.7"
services:
  # The Application
  app:
    build:
      context: ..
      dockerfile: docker/app/Dockerfile
    working_dir: /usr/src/app
    command: "python manage.py runserver --host 0.0.0.0"
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - ../:/usr/src/app
    env_file:
      - .env

    # PostgreSQL
  postgres:
    image: postgres:latest
    volumes:
      - ./postgres/db:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "127.0.0.1:5432:5432"

  # Redis
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

networks:
  default:
    name: mrb_covid_network
